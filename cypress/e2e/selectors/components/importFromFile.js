export default {
  importFromFile: '//span[text()="Import from File"]',
  fileUpload: '//*[@class="browse"]//ancestor::div//input[@type="file"]',
  fileUploadProgress: '.file-uploading',
  continueBtn: '//button[text()="continue"]',
  errorTag: '.banner.modal-header h3',
  importStatusTag: 'span.success-message',
  labelName: '//input[@value="ourLabel"]//ancestor::tr//option[@value="duroLabel"]',
  nameInDescOrValue: '//input[@value="Desc / Value"]//ancestor::tr//option[@value="name"]',
  mappingFieldsDropdown: '//input[@value="Desc / Value"]//ancestor::tr//select',
  mappingFieldToggleBtn: '//input[@value="Desc / Value"]//ancestor::tr//div[@name="toggle-btn"]',
  GreenIconInMpnField: '.ui-icon.duro-icon-confirm-circle',
  checkingForErrorsSpinnerIcon: '//h3[text()="Checking for errors..."]',
  tableIndex: '.index-table',
  tableCell: '//tr//*[text()="name"]',
  updateFromExistingLibrary: 'input[value="update"]',
  defaultImage: '.default-img',
  imageBlock: '.images',
  totalComponentsCount: '.table-icons-section .grey.records-count',
  componentsTable: '.extended-table-data tbody tr',
  importErrorTooltip: 'input[value="cmpData"]',
  importFromFileModalHeading: 'div.custom-modal-header div h2',
  loadingSpinner: '.ui-loading',
  errorCountInReviewPage : 'header[class="banner errors modal-header"] h3',
  warningInReviewPage : '.simple-rc-tip.error .rc-tooltip-inner p.warning',
  errorInReviewPage: '.simple-rc-tip.error .rc-tooltip-inner .error-message',
  useExistingButton: '.simple-rc-tip.error .rc-tooltip-inner .ta-right button',
  erroredColumn: (rowIndex, columnIndex) =>`.text-inputs.invalid.elipses-${columnIndex}-${rowIndex}`,
  unmappedLabels: 'tbody [data-tip="Do not import"]',
  existingCmpRadioBtnForAssemblyImport: 'input[value="update_assembly"]',
  importProgressModal: '.progress-modal',
  importDataUsingMpnToggleBtn: 'div.mpn-import div[name="toggle-btn"]',
  requireFieldErrorInMapFieldsPage: 'p.invalid',
  errorMsgInImportCmpFromFilePage: '.MuiDialogContent-root p',
  reviewPage : {
    allRowsToggleBtn: '//th[@class="first-child"]/div[@name="mapAll"]',
    enableOrDisableRowToggleBtn: (rowIndex) => `//tr[${rowIndex}]/td[@class="first-child"]/div[contains(@class,"ui-toggle-btn")]`,
    cell: (rowIndex, columnName) => `//tr[${rowIndex}]/td[@name="${columnName}"]//input`,
    errorIcon: (rowIndex, columnName) => `//tr[${rowIndex}]/td[@name="${columnName}"]//input`
  }
}
