export default {
  tableCell: '//tr//*[text()="name"]/ancestor::tr//td[index]',
  tableRow: '//tr//*[text()="name"]/ancestor::tr',
  tableHeader: 'th[name="cpn"]',
  tableIndexes: '//table[@id="index-table"]//tbody//tr[indexValue]//input',
  loadingSpinner: '.ui-loading',
  settingsDropdown: '.table-settings-wrapper',
  settingsDropDownOption: '//span[text()="CPN"]/ancestor::li//input[@type="checkbox"]',
  componentLibBtn: '#componentNavLink > .sideNavLinks > .nav-icon',
  importFromFile: '//span[text()="Import from File"]',
  importFromVendor: '//span[text()="Import from Vendor"]',
  importFromValispace: '//span[text()="Import from Valispace"]',
  createManually: 'a[class=" hand-icon"]',
  typeOfImport: '//span[text()="Create new Components"]',
  mechanicalIcon: '[name="mechanical"]',
  electicalIcon: '[name="electrical"]',
  assemblyIcon: '[name="assembly"]',
  softwareIcon: '[name="software"]',
  documentIcon: '[name="document"]',
  chooseCategory: '[name="category"] select',
  createBtn: '.spinner-btn',
  nameTxtBx: '.form-group [name="name"]',
  revisionTxtBx: '.form-group [name="revision"]',
  eidTxtBx: '.form-group [name="eid"]',
  descriptionTxtBx: '.form-group textarea[name="description"]',
  status: '.form-group select[name="status"]',
  saveBtn: 'input[value="SAVE"]',
  cancelBtn: 'input[value="CANCEL"]',
  revisionTooltip: 'div.revision-tip span',
  eidTooltip: '.eid-tip',
  nameTooltip: 'div .name-tip span',
  descTooltip: 'div.description-tip span',
  cancelBtnInCreateComponent: '//button[text()="CANCEL"]',
  sizeError: '.file-upload-error .current-progress',
  cancelFileUpload: '.current-progress .cancel-file',
  deleteIconForFailedFile: '//span[contains(text(),"File")]//parent::div//*[@class="delete-icon"]//*[@id="SMALL-REMOVE"]',
  uploadingStatus: '.upload-file-list.file-uploading',
  addAnotherCheckbox: 'input[type="checkbox"][name="add_more"]',
  createComponentManuallyModal: '.ui-modal-box .modal-content',
  createcomponentLabel: '//h2[normalize-space()="Create Component"]',
  fileUploading: '.file-uploading',
  offTheShelfIcon: '[name="off the shelf"]',
  cmpLibraryPage: '.extended-table-section',
  exportInCmpLibrary: '[data-tip="Export products and components"] span',
  charger: {
    typeTxtBx: '//label[contains(text(),"Type")]/following-sibling::input',
    voltageOutTxtBx: '//label[contains(text(),"Voltage Out")]/following-sibling::input',
    voltageInTxtBx: '//label[contains(text(),"Voltage In")]/following-sibling::input',
    chargerCurrentTxtBx: '//label[contains(text(),"Charger Current")]/following-sibling::input',
  },
  uploadThumbnails: '.thumbnails-block input',
  fileUploadProgress: '.file-uploading .current-progress i',
  uploadDocuments: '.documents-block input',
  editComponent: {
    eidValue: 'input[name="eid"]',
    revisionValue: '[name="revision"]',
    compDesc: '.tile-item [name="description"]',
    voltageOut: '[data-key="Voltage Out"]',
    voltageIn: '[data-key="Voltage In"]',
    chargerCurrent: '[data-key="Charger Current"]',
    mass: 'input[name="mass"]',
    procurement: '[data-tip="procurement"]',
    unitOfMeasure: '[name="unitOfMeasure"]',
    saveBtn: '[value="SAVE"]',
    saveAsRevisionBtn:'.btn-black-theme',
    cancelFileUpload: '.file-uploading .cancel-file',
    productDocumentTableRows: '.index-table tbody tr',
    uploadDocument: '//span[text()="DRAG FILES TO UPLOAD (max "]//ancestor::div[@class="drop-zone"]//child::input[@type="file"]',
    uploadDocumentError: '#documentsTable span.current-status',
    fileUploadProgress: '.file-uploading',
    revisionInSaveAsRevisionModal: 'input[name="revision"]',
    commentInSaveAsRevisionModal: '.revision-comment',
    continueBtnInSaveAsRevisionModal: '.filled',
    status: 'select[name="status"]',
    componentName: 'form input[name="name"]',
    errorIcon: '[data-for="errors-warning-icon"]',
    updateStatusModal: '.update-status-screen',
    childTableInupdateStatusModal: '#update-revision-holder',
    cancelBtnInEditComponent: '//a[text()="CANCEL"]',
    continueBtnInSetNewRevisionsModal: '.spinner-btn.btn-header.active',
    editModeBannerBlock: '.banner-block',
    chooseCategory: '.category-drop-down',
    categoryChangeModal: '.ui-modal-box .modal',
    continueBtnInCategoryChangeModal: '.filled.allow',
    erpToolTip: '//div[@class="react-datepicker__input-container"]//input["assertText"]',
    erpStartDate: '//span[text()="Start Date"]/following-sibling::div//input',
    erpEndDate: '//span[text()="End Date"]/following-sibling::div//input',
    erpType: '.erp-section [name="itemType"]',
    errorToolTip: '//input[@name="name"][@data-tip="assertText"]',
    docTypesDropdown: '//span[text()="docName"]//ancestor::td/following-sibling::td//select[@name="type"]',
    erpMessage: '.erp-message',
    commentInBulkUpdateSaveAsRevisionModal: '[name ="revision-comment"]',
    name: '.name-block [name="name"]',
    category: (status) => `//aside[@class="tile-item"]//select/option[text()="${status}"]`,
    revisionManagedCheckBox: 'input[name="revisionManaged"]',
    cpnVarinatField: 'input[name="cpnVariant"]',
    cpnInputField: ".edit-component-route .top-block .diff-cpn-section input[name='cpn']",
    cpnErrorToolTip: (text) =>`.edit-cpn-field input[data-tip="${text}"]`,
    variantField: ".edit-component-route .edit-cpn-variant-field input",
    cpnAndVariantValue: 'concat(string(//div[@class="edit-cpn-field"]), \'-\', string(//input[@class="cpn-variant-field"]/@value))',
    editableCpn: '[name="cpn"]'
  },
  viewComponent: {
    componentName: '.truncate-name',
    eidValue: '.diff-eid-section .inner-value',
    massValue: '.diff-mass-section .inner-value',
    revisionValue: '.revision-value',
    statusLabel:'.status-label',
    compDesc: '.diff-description-section',
    createdDate: '//span[text()="created"]/following-sibling::div//span[@class="date-span"]',
    modifiedDate: '//span[text()="modified"]/following-sibling::div//span[@class="date-span"]',
    modifiedBy: '.created-by',
    chargerType:'.diff-type-section .inner-value',
    voltOut:'.diff-voltage-out-section .inner-value',
    voltIn: '.diff-voltage-in-section .inner-value',
    chargeCurrent: '.diff-charger-current-section .inner-value',
    unitOfMeasure: '.diff-unit-of-measure-section .inner-value',
    deleteIcon: '#delete-svg',
    editIcon: '//nav[@class="navigation"]//a[contains(@class,"ui-link") and contains(@href, "component/edit")]',
    copyIcon: '[data-tip="Duplicate products and components"]  .item-title',
    deleteComponentModal: '.modal-content',
    duplicateIcon: 'button.danger',
    exportIconInViewPage: '.ui-icon[data-tip="Export this component"]',
    status: '.inner-info.pov.diff-status-section .status-value',
    fileUploadSpinner: '#documentsTable  .file-uploading',
    procurementValue: '.inner-info.values-to-right.diff-procurement-section .inner-value',
    whereUsedIcon: '[data-tip="Where used"]',
    whereUsedText: 'span.info',
    secondItemInHistoryTable: '(//span[@class="user-name"])[2]',
    historyIcon: '.ui-icon[data-tip="View component revisions"]',
    revisionHistoryIcon: '#rev-history-table .ui-icon.sub-rev-icon',
    revisionHistoryTable: '#rev-history-table tbody tr div.arrow-button',
    subRevisionHistory: '#rev-history-table tbody tr',
    changeOrderIcon: 'div[data-tip="Add to change order"]',
    highlightedArrowRow: '//div[contains(@class, "arrow-button")]/ancestor::tr//span[@class="revision-value" and text()="RevisionValue"]',
    compareRevision: '//div[@class="compare-rev-btn flex active"]//h4[text()="Compare Revisions"]',
    erpStartDate: '//span[text()="Start Date"]//parent::div//span[@class="date-span"]',
    erpEndDate: '//span[text()="End Date"]//parent::div//span[@class="date-span"]',
    erpType: '//span[text()="Item Type"]//following-sibling::span',
    erpTile: '//*[text()="ERP"]/ancestor::aside[@class="tile-item"]',
    category: '.diff-category-section span.inner-value',
    erpTile: '//*[text()="ERP"]/ancestor::aside[@class="tile-item"]',
    changeOrderIconAfterModifyingCmp: 'div.changeorder-actions-block div[data-tip="Component has been modified"]',
    addToChangeOrder: '//span[text()="Add to change order"]',
    totalRevisions: '#rev-history-table tbody tr',
    viewLatestRelease: '//button[text()="VIEW LATEST RELEASE"]',
    favoriteIcon: '[data-tip="Save component to favorites"]',
    variantIcon: '//div[@class="ui-icon variant-stroke"]',
    newVariantOptn: '//div[@class="variant-popup-header-btn flex"]',
    massUnitLabel: '.diff-mass-section .inner-attribute',
    addFromLibraryInVariantTable: '#variant-table .search-bar',
    addFromLibraryInVariantPrefix: '.variant-search-prefix',
    variantsAddfromLibraryTableHeader: '//th[text()="CPN / Name"]',
    existingVariantInAddFromLibraryTable: '//div[text()="name"]/ancestor::tr',
    searchForVariantsAddFromLibrary: '//input[@placeholder="Add from Library"]',
    erpMessage: '.erp-message',
    historyTableLoadingIcon: 'div.loading-block .ui-icon',
    subRevisionLazyLoading: 'tr.custom-loader-holder',
    previousRevision: '//div[@class="custom-history-table"]//tbody/tr[index]/td[3]//span[@class="user-name"]',
    historyIconInCompareRevisionPage: '.revision-col.modified-col .icon-holder .ui-icon',
    selectRevision: (Rev, AuthorName) => `//span[@class="revision-value" and text()="${Rev}"]/ancestor::tr//span[text()="${AuthorName}"]`,
    revertBack: '//*[text()="Revert back"]',
    yesBtnInConfirmRevertChanges: '[class="filled"]',
    selectStatus: (Status, AuthorName) => `//span[contains(@class, "status-label") and text()="${Status}"]/ancestor::tr//span[text()="${AuthorName}"]`,
    cpnValue: '.tile-item .cpn-value',
    exportIconInCmpRevisionPage: '.ui-icon[data-tip="Export this Revision"]',
    extendedCost: ".tiles-section-scroll .diff-extended-cost-section .inner-value",
    selectRevisionRadioBtn: '(//div[@class="rounded-checkbox"]/input)[index]'
  },
  tableDeleteIcon: '//span[@class="item-title" and text()= "Delete"]',
  updateStatusIcon: '#Bulk-Status-from-Search',
  changeStatus: {
    bulkStatus: '.status-slect.bulk-status.select-status',
    applyBtn: '//button[text()="Apply"]',
    continueBtn: '//button[text()="Continue"]',
    resetBtn: '//button[text()="Reset"]',
    confirmStatusChangeTable: '#revisionTable',
    statusDropdown: '//tr//*[text()="name"]/ancestor::tr//select[@name="child-status"]',
    tableIndexes: '//div[@id="update-revision-holder"]//table[@id="index-table"]//tbody//tr[indexValue]//input',
    tableRow: '//div[@id="update-revision-holder"]//tr//*[text()="name"]/ancestor::tr',
    includeChildComponents: 'input[name="check-child-revision"]',
    changeStatusPageHeader: '.update-status-screen-content-holder h1',
    changedStatus: (compData, status) => `//*[text()="${compData}"]//ancestor::tr//select/option[@value="${status}"]`,
  },
  detailPage: {
    duplicateIcon: '[data-tip="Duplicate a component"]',
    saveBtn: 'input[value="SAVE"]',
  },
  vendorPage: {
    mpnTextField: '.mpn-input-holder input',
    searchMpnOrDpn: '.mpn-input-holder-sourcing input',
    addBtn: '//button[text()="ADD"]', 
    importFromVendorModalHeading: 'div.custom-modal-header div h2',
    mpnAlreadyExistError: '.simple-rc-tip.error .rc-tooltip-inner p > .link-text',
    mpnAlreadyExistCpnValue: '.simple-rc-tip.error .rc-tooltip-inner .open-link-holder .link-text',
    chooseCategoryInImportVendorModal: '[class="form-group"] [name="category"] select'
  },
  valispaceModal: {
    workspacesTable: '.valispace-modal #workspaces-table',
    projectsTable: '.valispace-modal #projects-table',
    reviewTable: '.valispace-modal #valispace-review-table',
    radioInput: name => `input[type="radio"][name="${name}"]`,
    continueBtn: '.valispace-modal .btn-continue',
    allComponentsCheckBox: '.valispace-components-view #index-table thead input',
    nthRowCategorySelect: (row) => `.valispace-modal #valispace-review-table tr:nth-child(${ row + 1 }) .category-col select`,
  },vendorLogin: {
    exportIcon: '.ui-icon[data-tip="Export this Revision"]',
  },
  switchToRevisionControlModal: {
    title: '.modal h1',
    revisionField: '.modal input[name="revision"]',
    continueBtn: '//button[text()="continue"]',
  },
  searchField: 'input.search-input',
  selectAllIndexCheckbox: '#index-table thead tr:nth-child(1) input',
  changesWillBeLostModal: '.ui-modal-box .modal',
  companyName: '.company-name',
  cancelBtnInUnsavedChanges: '.button-sections button[class="dark allow"]',
  okBtnInUnsavedChanges: '.button-sections button[class="filled allow"]',
  revisionHistoryInViewCmp: {
    revisionHistoryTableHeader: '//div[@id="rev-history-table"]//table/thead/tr/th[text()="TYPE"]',
    revisionHistoryTableRow: '(//tr/td/ancestor::tr//td[columnIndex])[rowIndex]',
  },
  documentsTabForCmp: '[name="documents"]',
  documentsTab: {
    revision: (docName) => `//span[text()="${docName}"]//ancestor::tr//input[@name="revision"]`,
    status: (status) => `//span[text()="${status}"]//ancestor::tr//select[@name="status"]`,
    name: '//tr[rowNo]//*[text()="searchRowByText"]'
  },
  compareRevisionsPage: {
    summaryOfChangesPanel: {
      oldRevision: 'div.box-holder.diff-revision-section span.diff-check.remove',
      newRevision: 'div.box-holder.diff-revision-section span.diff-check.add',
      assemblyModifiedlabel: '//div[contains(@class,"diff-assembly-section")]//span[text()="MODIFIED"]',
      assemblyModifiedContent: '//span[text()="MODIFIED"]/ancestor::div[@class="item-list"]//div[@class="item-content"]/span',
    },
    assemblyTable: {
      modifiedRow: '//span[text()="cmpName"]/ancestor::tr[@class="update"]',
      nonModifiedRow: '//span[text()="cmpName"]/ancestor::tr',
      modifiedCount: '//span[text()="cmpName"]/following-sibling::div/div',
      oldRevision: '//span[text()="cmpName"]/ancestor::td/following-sibling::td//div[contains(@class,"update-tag remove")]/span',
      newRevision: '//span[text()="cmpName"]/ancestor::td/following-sibling::td//div[contains(@class,"update-tag add")]/span',
    }
  },
  setNewRevisionsModal: {
    childComponentsTable: '#update-revision-holder',
    allChildCheckBox: 'input[name="group"]',
    childRowCheckBox: '(//span[contains(@class, "index-checkbox")]/input)[Index]'
  }
}
